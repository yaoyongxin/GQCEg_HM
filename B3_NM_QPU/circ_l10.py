from qiskit import QuantumCircuit
qasm = """
OPENQASM 2.0;
include "qelib1.inc";
gate rzx(param0) q0,q1 { h q1; cx q0,q1; rz(param0) q1; cx q0,q1; h q1; }
gate ecr q0,q1 { rzx(pi/4) q0,q1; x q0; rzx(-pi/4) q0,q1; }
qreg q[127];
sx q[104];
rz(0.3082359222613382) q[104];
rz(-pi) q[105];
sx q[105];
rz(pi/2) q[105];
rz(pi/2) q[106];
sx q[106];
rz(-0.14224421654125363) q[106];
ecr q[106],q[105];
rz(-pi) q[105];
sx q[105];
rz(3.125611604527835) q[105];
sx q[105];
ecr q[106],q[105];
rz(-pi) q[105];
sx q[105];
rz(-pi) q[105];
ecr q[105],q[104];
rz(-pi) q[104];
sx q[104];
rz(3.1400888111403997) q[104];
sx q[104];
ecr q[105],q[104];
rz(2.8333567313282577) q[104];
sx q[104];
rz(-1.5707963267963683) q[104];
sx q[104];
rz(-pi) q[105];
sx q[105];
rz(-0.5534470895614154) q[106];
rz(pi/2) q[107];
sx q[107];
rz(pi/2) q[108];
sx q[108];
rz(-pi) q[111];
sx q[111];
rz(-0.27259668790729386) q[111];
rz(pi/2) q[112];
sx q[112];
rz(-pi) q[112];
sx q[122];
rz(pi/2) q[122];
rz(pi/2) q[123];
sx q[123];
rz(0.03978906542983118) q[123];
ecr q[122],q[123];
rz(-pi) q[123];
sx q[123];
rz(3.1011550746530236) q[123];
sx q[123];
ecr q[122],q[123];
sx q[122];
ecr q[122],q[111];
rz(-pi) q[111];
sx q[111];
rz(3.1354670069961) q[111];
sx q[111];
ecr q[122],q[111];
rz(-1.298199638887602) q[111];
sx q[111];
rz(pi/2) q[111];
rz(-pi) q[122];
sx q[122];
rz(-pi) q[122];
rz(3.10180358815996) q[123];
rz(pi/2) q[124];
sx q[124];
rz(-pi/2) q[125];
sx q[125];
rz(pi/2) q[125];
ecr q[124],q[125];
rz(-pi/2) q[124];
sx q[124];
rz(-pi) q[124];
rz(pi/2) q[125];
sx q[125];
ecr q[124],q[125];
rz(pi/2) q[124];
sx q[124];
rz(pi/2) q[124];
rz(-pi/2) q[125];
ecr q[124],q[125];
rz(-pi) q[124];
sx q[124];
rz(-pi) q[124];
ecr q[124],q[123];
sx q[123];
rz(-pi/2) q[124];
sx q[124];
rz(-0.03229811459038068) q[124];
sx q[124];
ecr q[124],q[123];
ecr q[122],q[123];
rz(-pi/2) q[122];
sx q[122];
rz(-pi) q[122];
rz(pi/2) q[123];
sx q[123];
ecr q[122],q[123];
rz(pi/2) q[122];
sx q[122];
rz(pi/2) q[122];
rz(-pi/2) q[123];
ecr q[122],q[123];
sx q[122];
rz(-pi/2) q[122];
ecr q[122],q[111];
rz(-pi) q[111];
sx q[111];
rz(3.139730191772969) q[111];
sx q[111];
ecr q[122],q[111];
rz(-pi) q[111];
sx q[111];
rz(pi/2) q[111];
rz(pi/2) q[122];
sx q[122];
rz(-pi) q[122];
rz(pi/2) q[123];
sx q[124];
ecr q[124],q[123];
rz(1.7933603745400752) q[123];
sx q[123];
rz(-pi) q[123];
x q[124];
rz(-pi/2) q[124];
ecr q[124],q[123];
rz(pi/2) q[123];
sx q[123];
rz(pi/2) q[123];
rz(pi/2) q[124];
sx q[124];
rz(pi/2) q[125];
sx q[125];
rz(-pi/2) q[125];
rz(pi/2) q[126];
sx q[126];
rz(-pi/2) q[126];
ecr q[126],q[112];
rz(pi/2) q[112];
sx q[112];
rz(-pi/2) q[126];
sx q[126];
rz(-pi) q[126];
ecr q[126],q[112];
rz(-pi/2) q[112];
rz(pi/2) q[126];
sx q[126];
rz(pi/2) q[126];
ecr q[126],q[112];
rz(-pi/2) q[112];
sx q[112];
ecr q[108],q[112];
rz(-pi/2) q[108];
sx q[108];
rz(-pi) q[108];
rz(pi/2) q[112];
sx q[112];
ecr q[108],q[112];
rz(pi/2) q[108];
sx q[108];
rz(pi/2) q[108];
rz(-pi/2) q[112];
ecr q[108],q[112];
x q[108];
rz(-pi/2) q[108];
ecr q[107],q[108];
rz(-pi/2) q[107];
sx q[107];
rz(-pi) q[107];
rz(pi/2) q[108];
sx q[108];
ecr q[107],q[108];
rz(pi/2) q[107];
sx q[107];
rz(pi/2) q[107];
rz(-pi/2) q[108];
ecr q[107],q[108];
rz(pi/2) q[107];
ecr q[107],q[106];
rz(-pi) q[106];
sx q[106];
rz(3.1288023272145296) q[106];
sx q[106];
ecr q[107],q[106];
rz(0.6956913061026704) q[106];
ecr q[106],q[105];
rz(pi/2) q[105];
sx q[105];
rz(-pi/2) q[106];
sx q[106];
rz(-pi) q[106];
ecr q[106],q[105];
rz(-pi/2) q[105];
rz(pi/2) q[106];
sx q[106];
rz(pi/2) q[106];
ecr q[106],q[105];
sx q[105];
ecr q[105],q[104];
rz(-pi) q[104];
sx q[104];
rz(3.140005536828369) q[104];
sx q[104];
ecr q[105],q[104];
rz(-pi) q[104];
sx q[104];
rz(1.5707963267963674) q[104];
rz(-pi/2) q[105];
sx q[105];
x q[106];
sx q[107];
ecr q[107],q[106];
rz(-pi) q[106];
sx q[106];
rz(1.7918828702784975) q[106];
sx q[106];
ecr q[107],q[106];
rz(-pi) q[106];
sx q[106];
rz(-pi/2) q[107];
sx q[107];
rz(-pi/2) q[107];
rz(pi/2) q[108];
sx q[108];
rz(-pi/2) q[108];
rz(pi/2) q[112];
sx q[112];
rz(-pi/2) q[112];
rz(-pi/2) q[126];
sx q[126];
rz(-pi/2) q[126];
"""
circuit = QuantumCircuit.from_qasm_str(qasm)
print(circuit.depth())
print(circuit.count_ops())
